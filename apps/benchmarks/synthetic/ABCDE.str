float->float filter B(int k, portal<D> DBPort) {
    work pop 1 push k {
        push(pop());
        for(int i = 1; i < k; i++)
            push(i);
        DBPort.setFreq(3) [-1:-1];
    } 
}

float->float filter D(int k) {
    int freq;
    init {
        freq = 0;
    }

    handler setFreq(int newFreq) {
        freq = newFreq;
    }


    work pop k push 1 {
        for(int i = 1; i < k; i++) {
            pop();
            pop();
        }
        push(pop());
    } 
}

float->float pipeline BD {
    portal<D> BDPort;
    add B(2, BDPort);
    add D(3) to BDPort;
}

float->float filter C(int n, int m) {
   work push n pop m {
        if(n < m) {
            for(int i = 0; i < n; i++) {
                push(pop());
            } 
            for(int j = n; j < m; j++) {
                pop();
            }
        } else {
            for(int i = 0; i < m; i++) {
                push(pop());
            } 
            for(int j = m; j < n; j++) {
                push(0);
            }

        }
   } 
}

float->float splitjoin BCD {
    split roundrobin(2,1);
    add C(4,3);
    add BD();
    join roundrobin(4,1);
}

void->float filter A(int k) {
    int scale;
    init {
        scale = 1;
    }

    handler changeScale(int n) {
        scale = n;
    }

    work push k {
        for(int i = 0; i < k; i++) {
            push(i * scale);
        }

    }
}

float->void filter E(int k, portal<A> EAPort) {
   
    work pop k {
        for(int i = 0; i < k; i++) {
            //pop();
            println(pop());
        }
        EAPort.changeScale(3)[0:0];
    }
}

void->void pipeline ABCDE {
    portal<A> EAPort;
    add A(3) to EAPort;
    add BCD();
    add E(2, EAPort);
}
